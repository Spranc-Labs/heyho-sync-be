#!/bin/bash
# Pre-commit hook to run RuboCop on all Ruby files

set -e

echo "Running pre-commit checks..."

# Get list of staged Ruby files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(rb|rake)$' || true)

if [ -z "$STAGED_FILES" ]; then
  echo "✓ No Ruby files to check"
  exit 0
fi

echo "Checking Ruby files with RuboCop..."
echo "$STAGED_FILES"

# Get the repo root
REPO_ROOT=$(git rev-parse --show-toplevel)

# Check if we're in the standalone repo or nested in platform
if [ -f "$REPO_ROOT/docker-compose.yml" ]; then
  # Standalone repo - use local docker-compose
  cd "$REPO_ROOT"
  if docker-compose run --rm --no-deps heyho-sync-be bundle exec rubocop $STAGED_FILES; then
    echo "✓ All checks passed!"
    exit 0
  fi
elif [ -f "$REPO_ROOT/../docker-compose.yml" ]; then
  # Nested in platform - use platform docker-compose
  cd "$REPO_ROOT/.."
  if docker-compose run --rm --no-deps heyho-sync-be bundle exec rubocop $STAGED_FILES; then
    echo "✓ All checks passed!"
    exit 0
  fi
else
  # Neither found - try local bundle exec
  cd "$REPO_ROOT"
  if bundle exec rubocop $STAGED_FILES; then
    echo "✓ All checks passed!"
    exit 0
  fi
fi

echo ""
echo "❌ RuboCop found issues. Please fix them before committing."
echo "   Run: bundle exec rubocop -A"
echo "   Or (with docker): docker-compose run --rm --no-deps heyho-sync-be bundle exec rubocop -A"
exit 1
