{
	"info": {
		"_postman_id": "8a4d2c68-98b1-4f6a-a7c5-2d5e9f3a8b1c",
		"name": "HeyHo Sync - Rodauth Authentication API",
		"description": "Complete API collection for HeyHo Sync authentication system powered by Rodauth. This collection includes all authentication endpoints with comprehensive success/failure examples and automated token management.\n\n## Features Covered:\n- ✅ Account Creation with Email Verification\n- ✅ Login/Logout with JWT tokens\n- ✅ Password Reset & Change\n- ✅ Email Change & Verification\n- ✅ User Profile Management\n- ✅ Account Closure\n\n## Environment Variables:\n- `base_url`: API base URL (default: http://localhost:3000)\n- `access_token`: JWT access token (auto-managed)\n- `jwt_token`: JWT token for authentication (auto-managed)\n\n## Authentication:\nMost endpoints require JWT authentication. The collection automatically manages tokens after successful login/registration.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "01. Authentication",
			"item": [
				{
					"name": "Create Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.access_token) {",
									"        pm.environment.set('access_token', responseJson.access_token);",
									"        pm.environment.set('jwt_token', responseJson.access_token);",
									"        console.log('✅ Access token saved to environment');",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"SecurePass123!\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/create-account",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"create-account"
							]
						},
						"description": "Create a new user account with email verification.\n\n**Required Fields:**\n- `email`: Valid email address\n- `password`: Minimum 8 characters\n- `first_name`: User's first name\n- `last_name`: User's last name\n\n**Response:**\n- Returns JWT access token on success\n- Account is created in 'unverified' status\n- Verification email is sent automatically"
					},
					"response": [
						{
							"name": "Success - Account Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"SecurePass123!\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/create-account",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"create-account"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"access_token\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJhdWQiOiJhY2NvdW50IiwiaWF0IjoxNjk0NzY4NDAwLCJleHAiOjE2OTQ3NzIwMDB9.example\",\n    \"account_id\": 123,\n    \"email\": \"john.doe@example.com\",\n    \"status\": \"unverified\",\n    \"message\": \"Account created successfully. Please check your email to verify your account.\"\n}"
						},
						{
							"name": "Error - Email Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"existing@example.com\",\n    \"password\": \"SecurePass123!\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/create-account",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"create-account"
									]
								}
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"There is already an account with this login\",\n    \"field-error\": [\"email\", \"already an account with this login\"]\n}"
						},
						{
							"name": "Error - Missing Required Fields",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"short\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/create-account",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"create-account"
									]
								}
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"first_name must be present\",\n    \"field-error\": [\"first_name\", \"must be present\"]\n}"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.access_token) {",
									"        pm.environment.set('access_token', responseJson.access_token);",
									"        pm.environment.set('jwt_token', responseJson.access_token);",
									"        console.log('✅ Access token saved to environment');",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"SecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"login"
							]
						},
						"description": "Authenticate user and receive JWT access token.\n\n**Required Fields:**\n- `email`: User's email address\n- `password`: User's password\n\n**Response:**\n- Returns JWT access token for authenticated requests\n- Token automatically saved to environment variables"
					},
					"response": [
						{
							"name": "Success - Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"SecurePass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"access_token\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJhdWQiOiJhY2NvdW50IiwiaWF0IjoxNjk0NzY4NDAwLCJleHAiOjE2OTQ3NzIwMDB9.example\",\n    \"account_id\": 123,\n    \"email\": \"john.doe@example.com\",\n    \"status\": \"verified\"\n}"
						},
						{
							"name": "Error - Invalid Credentials",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"wrongpassword\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"There was an error logging in\",\n    \"field-error\": [\"password\", \"invalid password\"]\n}"
						},
						{
							"name": "Error - Account Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"nonexistent@example.com\",\n    \"password\": \"SecurePass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"There was an error logging in\",\n    \"field-error\": [\"email\", \"no account with this login\"]\n}"
						}
					]
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/v1/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						},
						"description": "Logout user and invalidate JWT token.\n\n**Authentication:** Required (JWT token)\n\n**Response:**\n- Invalidates the current JWT token\n- Returns success confirmation"
					},
					"response": [
						{
							"name": "Success - Logout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJhdWQiOiJhY2NvdW50IiwiaWF0IjoxNjk0NzY4NDAwLCJleHAiOjE2OTQ3NzIwMDB9.example"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/logout",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"You have been logged out\"\n}"
						},
						{
							"name": "Error - Not Authenticated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/v1/logout",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Please login to continue\"\n}"
						}
					]
				}
			],
			"description": "Core authentication endpoints for account creation, login, and logout."
		},
		{
			"name": "02. Email Verification",
			"item": [
				{
					"name": "Verify Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"verification_key_from_email\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/verify-account",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"verify-account"
							]
						},
						"description": "Verify user's email address using the verification key sent via email.\n\n**Required Fields:**\n- `key`: Verification key from email\n\n**Response:**\n- Account status changes to 'verified'\n- Returns success confirmation"
					},
					"response": [
						{
							"name": "Success - Account Verified",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"abc123def456\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/verify-account",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"verify-account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Your account has been verified\"\n}"
						},
						{
							"name": "Error - Invalid Key",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"invalid_key\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/verify-account",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"verify-account"
									]
								}
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Invalid or expired verification key\",\n    \"field-error\": [\"key\", \"invalid key\"]\n}"
						}
					]
				},
				{
					"name": "Resend Verification Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/resend-verify-account",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"resend-verify-account"
							]
						},
						"description": "Resend verification email to user's email address.\n\n**Required Fields:**\n- `email`: User's email address\n\n**Response:**\n- New verification email sent\n- Returns success confirmation"
					},
					"response": [
						{
							"name": "Success - Email Sent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.doe@example.com\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/resend-verify-account",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"resend-verify-account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"An email has been sent to you with a link to verify your account\"\n}"
						}
					]
				}
			],
			"description": "Email verification endpoints for confirming user email addresses."
		},
		{
			"name": "03. Password Management",
			"item": [
				{
					"name": "Request Password Reset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/reset-password-request",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"reset-password-request"
							]
						},
						"description": "Request a password reset email.\n\n**Required Fields:**\n- `email`: User's email address\n\n**Response:**\n- Password reset email sent\n- Returns success confirmation"
					},
					"response": [
						{
							"name": "Success - Reset Email Sent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.doe@example.com\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/reset-password-request",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"reset-password-request"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"An email has been sent to you with a link to reset the password for your account\"\n}"
						}
					]
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"reset_key_from_email\",\n    \"password\": \"NewSecurePass123!\",\n    \"password-confirm\": \"NewSecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/reset-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"reset-password"
							]
						},
						"description": "Reset password using the reset key from email.\n\n**Required Fields:**\n- `key`: Reset key from email\n- `password`: New password (minimum 8 characters)\n- `password-confirm`: Password confirmation (must match)\n\n**Response:**\n- Password successfully reset\n- User can login with new password"
					},
					"response": [
						{
							"name": "Success - Password Reset",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"abc123def456\",\n    \"password\": \"NewSecurePass123!\",\n    \"password-confirm\": \"NewSecurePass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/reset-password",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"reset-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Your password has been reset\"\n}"
						},
						{
							"name": "Error - Password Mismatch",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"abc123def456\",\n    \"password\": \"NewSecurePass123!\",\n    \"password-confirm\": \"DifferentPassword\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/reset-password",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"reset-password"
									]
								}
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Passwords do not match\",\n    \"field-error\": [\"password-confirm\", \"passwords do not match\"]\n}"
						}
					]
				},
				{
					"name": "Change Password (Authenticated)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"CurrentPassword123!\",\n    \"new-password\": \"NewSecurePass123!\",\n    \"password-confirm\": \"NewSecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/change-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"change-password"
							]
						},
						"description": "Change password for authenticated user.\n\n**Authentication:** Required (JWT token)\n\n**Required Fields:**\n- `password`: Current password\n- `new-password`: New password (minimum 8 characters)\n- `password-confirm`: New password confirmation\n\n**Response:**\n- Password successfully changed\n- User remains logged in"
					},
					"response": [
						{
							"name": "Success - Password Changed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJhdWQiOiJhY2NvdW50IiwiaWF0IjoxNjk0NzY4NDAwLCJleHAiOjE2OTQ3NzIwMDB9.example"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"CurrentPassword123!\",\n    \"new-password\": \"NewSecurePass123!\",\n    \"password-confirm\": \"NewSecurePass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/change-password",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"change-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Your password has been changed\"\n}"
						},
						{
							"name": "Error - Invalid Current Password",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJhdWQiOiJhY2NvdW50IiwiaWF0IjoxNjk0NzY4NDAwLCJleHAiOjE2OTQ3NzIwMDB9.example"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"WrongCurrentPassword\",\n    \"new-password\": \"NewSecurePass123!\",\n    \"password-confirm\": \"NewSecurePass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/change-password",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"change-password"
									]
								}
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Invalid password\",\n    \"field-error\": [\"password\", \"invalid password\"]\n}"
						}
					]
				}
			],
			"description": "Password management endpoints for resetting and changing passwords."
		},
		{
			"name": "04. Email Management",
			"item": [
				{
					"name": "Request Email Change",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"newemail@example.com\",\n    \"password\": \"CurrentPassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/change-login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"change-login"
							]
						},
						"description": "Request to change email address (login).\n\n**Authentication:** Required (JWT token)\n\n**Required Fields:**\n- `login`: New email address\n- `password`: Current password for verification\n\n**Response:**\n- Verification email sent to new address\n- Email change pending verification"
					},
					"response": [
						{
							"name": "Success - Change Request Sent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJhdWQiOiJhY2NvdW50IiwiaWF0IjoxNjk0NzY4NDAwLCJleHAiOjE2OTQ3NzIwMDB9.example"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"newemail@example.com\",\n    \"password\": \"CurrentPassword123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/change-login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"change-login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"An email has been sent to you with a link to verify your new email address\"\n}"
						}
					]
				},
				{
					"name": "Verify Email Change",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"email_change_key_from_email\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/verify-login-change",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"verify-login-change"
							]
						},
						"description": "Verify email change using the verification key sent to new email.\n\n**Required Fields:**\n- `key`: Verification key from email\n\n**Response:**\n- Email address successfully changed\n- User can login with new email"
					},
					"response": [
						{
							"name": "Success - Email Changed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"abc123def456\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/verify-login-change",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"verify-login-change"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Your login has been changed\"\n}"
						}
					]
				}
			],
			"description": "Email management endpoints for changing and verifying email addresses."
		},
		{
			"name": "05. User Profile",
			"item": [
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						},
						"description": "Get current authenticated user's profile information.\n\n**Authentication:** Required (JWT token)\n\n**Response:**\n- Returns user profile data\n- Includes account status and verification info"
					},
					"response": [
						{
							"name": "Success - User Profile",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJhdWQiOiJhY2NvdW50IiwiaWF0IjoxNjk0NzY4NDAwLCJleHAiOjE2OTQ3NzIwMDB9.example"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/users/me",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": 123,\n        \"email\": \"john.doe@example.com\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"status\": \"verified\",\n        \"created_at\": \"2024-01-15T10:30:00Z\",\n        \"updated_at\": \"2024-01-15T10:30:00Z\"\n    }\n}"
						},
						{
							"name": "Error - Not Authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/users/me",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"You need to sign in or sign up before continuing.\"\n}"
						}
					]
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Johnny\",\n    \"last_name\": \"Doe\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						},
						"description": "Update current user's profile information.\n\n**Authentication:** Required (JWT token)\n\n**Optional Fields:**\n- `first_name`: User's first name\n- `last_name`: User's last name\n\n**Response:**\n- Returns updated user profile\n- Only provided fields are updated"
					},
					"response": [
						{
							"name": "Success - Profile Updated",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJhdWQiOiJhY2NvdW50IiwiaWF0IjoxNjk0NzY4NDAwLCJleHAiOjE2OTQ3NzIwMDB9.example"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Johnny\",\n    \"last_name\": \"Doe\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/users/me",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Profile updated successfully\",\n    \"data\": {\n        \"id\": 123,\n        \"email\": \"john.doe@example.com\",\n        \"first_name\": \"Johnny\",\n        \"last_name\": \"Doe\",\n        \"status\": \"verified\",\n        \"created_at\": \"2024-01-15T10:30:00Z\",\n        \"updated_at\": \"2024-01-15T14:45:00Z\"\n    }\n}"
						}
					]
				}
			],
			"description": "User profile management endpoints for viewing and updating user information."
		},
		{
			"name": "06. Account Management",
			"item": [
				{
					"name": "Close Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"CurrentPassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/close-account",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"close-account"
							]
						},
						"description": "Close/deactivate user account.\n\n**Authentication:** Required (JWT token)\n\n**Required Fields:**\n- `password`: Current password for verification\n\n**Response:**\n- Account status changed to 'closed'\n- User is logged out\n- All tokens invalidated"
					},
					"response": [
						{
							"name": "Success - Account Closed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJhdWQiOiJhY2NvdW50IiwiaWF0IjoxNjk0NzY4NDAwLCJleHAiOjE2OTQ3NzIwMDB9.example"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"CurrentPassword123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/close-account",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"close-account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Your account has been closed\"\n}"
						}
					]
				}
			],
			"description": "Account management endpoints for closing/deactivating accounts."
		},
		{
			"name": "07. System Health",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check API system health and status.\n\n**Authentication:** Not required\n\n**Response:**\n- Returns system status\n- Useful for monitoring and debugging"
					},
					"response": [
						{
							"name": "Success - System Healthy",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/health",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "OK"
						}
					]
				}
			],
			"description": "System health and monitoring endpoints."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default base_url if not set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:3000');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global response logging",
					"console.log('Response Status:', pm.response.code);",
					"console.log('Response Body:', pm.response.text());"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}

