{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "RuboCop: Lint",
      "type": "shell",
      "command": "make lint",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "RuboCop: Auto-fix",
      "type": "shell",
      "command": "make lint-fix",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Security: Brakeman Check",
      "type": "shell",
      "command": "make security-check",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Security: Generate Report",
      "type": "shell",
      "command": "make security-report",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Quality: Full Check",
      "type": "shell",
      "command": "make quality-check",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": {
        "kind": "test",
        "isDefault": true
      }
    },
    {
      "label": "Quality: Pre-commit Check",
      "type": "shell",
      "command": "make pre-commit-check",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Test: All",
      "type": "shell",
      "command": "make test",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Test: Fast (Fail Fast)",
      "type": "shell",
      "command": "make test-fast",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Test: Authentication",
      "type": "shell",
      "command": "make test-auth",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Test: Users",
      "type": "shell",
      "command": "make test-users",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Test: Verification",
      "type": "shell",
      "command": "make test-verification",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Test: Models",
      "type": "shell",
      "command": "make test-models",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Test: Requests",
      "type": "shell",
      "command": "make test-requests",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Test: Coverage",
      "type": "shell",
      "command": "make test-coverage",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "test"
    },
    {
      "label": "Docker: Up",
      "type": "shell",
      "command": "make up",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Docker: Down",
      "type": "shell",
      "command": "make down",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Docker: Restart",
      "type": "shell",
      "command": "make restart",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Docker: Logs",
      "type": "shell",
      "command": "make logs",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none",
      "isBackground": true
    },
    {
      "label": "Rails: Console",
      "type": "shell",
      "command": "make console",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Rails: Routes",
      "type": "shell",
      "command": "make routes",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Jobs: Refresh Whitelist (User ID)",
      "type": "shell",
      "command": "docker exec heyho-sync-be bundle exec rails runner 'RefreshPersonalWhitelistsJob.perform_now(${input:userId})'",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Jobs: Refresh Whitelist (All Users)",
      "type": "shell",
      "command": "docker exec heyho-sync-be bundle exec rails runner 'User.find_each { |user| RefreshPersonalWhitelistsJob.perform_now(user.id) }'",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Jobs: Console (Run Custom Job)",
      "type": "shell",
      "command": "docker exec -it heyho-sync-be bundle exec rails console",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Database: Migrate",
      "type": "shell",
      "command": "make migrate",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Database: Reset",
      "type": "shell",
      "command": "make db-reset",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Database: Seed",
      "type": "shell",
      "command": "make seed",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Hooks: Install Pre-commit",
      "type": "shell",
      "command": "make hooks-install",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Hooks: Test Pre-commit",
      "type": "shell",
      "command": "make hooks-test",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Docs: Generate",
      "type": "shell",
      "command": "make docs",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Docs: Serve",
      "type": "shell",
      "command": "make docs-serve",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none",
      "isBackground": true
    },
    {
      "label": "Docs: Stats",
      "type": "shell",
      "command": "make docs-stats",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "none"
    },
    {
      "label": "Backup: Create User Data Backup",
      "type": "shell",
      "command": "docker-compose exec heyho-sync-be bundle exec rake backup:user_data EMAIL=${input:userEmail}",
      "options": {
        "cwd": "${workspaceFolder}/../../"
      },
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "backup"
    },
    {
      "label": "Backup: List All Backups",
      "type": "shell",
      "command": "docker-compose exec heyho-sync-be bundle exec rake backup:list",
      "options": {
        "cwd": "${workspaceFolder}/../../"
      },
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "backup"
    },
    {
      "label": "Backup: List User Backups",
      "type": "shell",
      "command": "docker-compose exec heyho-sync-be bundle exec rake backup:list EMAIL=${input:userEmail}",
      "options": {
        "cwd": "${workspaceFolder}/../../"
      },
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "backup"
    },
    {
      "label": "Backup: Restore User Data",
      "type": "shell",
      "command": "docker-compose exec heyho-sync-be bundle exec rake backup:restore_user_data BACKUP_FILE=${input:backupFile}",
      "options": {
        "cwd": "${workspaceFolder}/../../"
      },
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "group": "backup"
    }
  ],
  "inputs": [
    {
      "id": "userId",
      "type": "promptString",
      "description": "Enter User ID to refresh whitelist for:",
      "default": "1"
    },
    {
      "id": "userEmail",
      "type": "promptString",
      "description": "Enter user email:",
      "default": "demo@syrupy.com"
    },
    {
      "id": "backupFile",
      "type": "promptString",
      "description": "Enter backup file path (e.g., backups/user_data/demo_at_syrupy_com_20251029_060600.json):",
      "default": "backups/user_data/"
    }
  ]
}
